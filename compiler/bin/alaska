#!/usr/bin/bash

set -e

PFX=$(realpath "$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )/../")

export PATH=$PFX/bin:$PATH
export LD_LIBRARY_PATH=$PFX/lib:$LD_LIBRARY_PATH

OUTFILE="a.out"
KEEP="false"
BASELINE="false"
COLLECT_CLANG_ARGS=() INPUTS=() OPT_ARGS=()
OBJECT_TARGET=

SO="so"
if [ "$(uname)" == "Darwin" ]; then
	SO="dylib"
fi

phase="link"

while [[ $# -gt 0 ]]
do
    case $1 in
			-T)
				export ALASKA_COMPILER_TRACE=yes
				shift
				;;
			-g*)
				shift
				;;
			-b|--baseline)
				BASELINE="true"
				shift
				;;
			-k|--keep-ir)
				KEEP="true"
				shift
				;;
			-o)
				OUTFILE="$2"
				shift
				shift
				COLLECT_CLANG_ARGS+=("-o $OUTFILE")
				;;
			-c)
				phase="compile"
				shift
				;;

			--alaska-*)
				OPT_ARGS+=("$1")
				shift
				;;
			*)
				COLLECT_CLANG_ARGS+=("$1")
				shift
				;;
    esac
done

COLLECT_CLANG_ARGS+=("-Xclang -disable-O0-optnone")
COLLECT_CLANG_ARGS+=("-gdwarf-4 ")


GCLANG="${ALASKA_GCLANG:=gclang}"
CLANG="${ALASKA_CLANG:=clang}"

if [ "$phase" = "compile" ]; then
	$GCLANG -Wno-unused-command-line-argument -I${PFX}/include -c ${COLLECT_CLANG_ARGS[@]} `alaska-config --cflags`
	exit
else
	# If the program is being linked, link it as the user requests, then
	# use get-bc to run our pass on it behind the scenes :)
	$GCLANG -Wno-unused-command-line-argument -I${PFX}/include ${COLLECT_CLANG_ARGS[@]} `alaska-config --cflags --ldflags`

	get-bc $OUTFILE >/dev/null
	[ "$BASELINE" == "true" ] && mv $OUTFILE $OUTFILE.base
	TMPFILE=${OUTFILE}.bc

	[ "$KEEP" == "true" ] && llvm-dis ${TMPFILE} -o ${OUTFILE}.in.ll
	$PFX/bin/alaska-transform ${TMPFILE} ${OPT_ARGS[@]}
	[ "$KEEP" == "true" ] && llvm-dis ${TMPFILE} -o ${OUTFILE}.out.ll

	$CLANG -O3 -gdwarf-4 ${TMPFILE}  -o $OUTFILE -ldl `alaska-config --ldflags`
	rm ${TMPFILE}
fi

