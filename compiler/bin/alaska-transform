#!/bin/bash

set -e

HERE=$(realpath "$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )")
PFX=$(realpath "$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )/../")


export PATH=$PFX/bin:$PATH
export LD_LIBRARY_PATH=$PFX/lib:$LD_LIBRARY_PATH

INPUT=$1
shift

AA="--basic-aa --globals-aa --cfl-steens-aa -tbaa --cfl-anders-aa -scev-aa "
LOOPS="-loops -loop-simplify -lcssa -domtree -scalar-evolution"
# AA=""
# LOOPS=""


OPT="opt -enable-new-pm=0 "${INPUT}" -o "${INPUT}""

# Run a cleanup pass on the bitcode
# $OPT --strip-debug
# make sure mem2reg is on :)
$OPT --mem2reg --lowerinvoke # $LOOPS --mem2reg -lcssa -gvn --instnamer -sink -simplifycfg

# run some loop adjustments
# $OPT ${AA} -loop-rotate -loop-simplify -indvars -lcssa -llicm

$OPT                                                \
	-load "${PFX}/lib/Alaska.so"                      \
	-load "${PFX}/lib/AlaskaNormalize.so"             \
	-load "${PFX}/lib/AlaskaReplacement.so"           \
	-load "${PFX}/lib/AlaskaEscapeHandler.so"         \
	--alaska-norm                                     \
	--alaska-replace                                  \
	--alaska-escape                                   \
	$AA $@                                            \
	--alaska

# Perform a bit of cleanup
$OPT --dce --adce
# link the alaska bitcode file
llvm-link -o ${INPUT} ${INPUT} ${PFX}/lib/alaska.bc
# run the inliner
$OPT --inline --always-inline
