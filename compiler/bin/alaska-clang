#!/usr/bin/bash

# echo "warning: alaska-clang is experimental and likely won't work for you due to how argument escapes are handled"

# The prefix directory
PFX=$(realpath "$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )/../")
export PATH=$PFX/bin:$PATH
export LD_LIBRARY_PATH=$PFX/lib:$LD_LIBRARY_PATH


linking=yes
relocatable=no

# The arguments that will go to clang at the end.
all_args=("$@")
argno=0


for arg in $@; do
  # Set addarg to no if this arg should be ignored by the C compiler
  addarg=yes
  case "${arg}" in
    -g)
      debug_symbols=yes
    ;;
    -c|-M|-MM)
      # The compiler links by default
      linking=no
    ;;
    -E)
      # When running the preprocessor only add the sysroot flag
      linking=no
    ;;
    -S|--assemble)
      # Assembler file is needed. Optimization seems to interfere
      linking=no
    ;;
    -r|--relocatable)
        relocatable=yes
    ;;
  esac

  if [ ${addarg} = no ]; then
    unset all_args[${argno}]
  fi

  argno=`expr ${argno} + 1`
done


ARGS=
# ARGS+="$($PFX/bin/alaska-config --cflags) "

# load the clang plugin for the llvm pass
ARGS+="-Xclang -fpass-plugin=$PFX/lib/Alaska.so "
ARGS+="-fplugin=$PFX/lib/Alaska.so "
ARGS+="-Wno-ignored-optimization-argument "
ARGS+="-Wno-unused-command-line-argument "
ARGS+="-fuse-ld=lld -flto=full -Wl,--load-pass-plugin=$PFX/lib/Alaska.so "
# ARGS+="$(alaska-config --ldflags --cflags) "

if [ "$linking" = yes ] ; then
  echo "LINKING!"

  # RUNTIME=$(mktemp --suffix=.bc)
  # llvm-link ${PFX}/lib/alaska_stub.bc ${PFX}/lib/alaska_translate.bc -o ${RUNTIME}
  # opt -O3 --strip-debug ${RUNTIME} -o ${RUNTIME}
  exec clang $ARGS "${all_args[@]}" -ldl # $(alaska-config --ldflags)
else
  echo "NOT LINKING!"

  exec clang $ARGS "${all_args[@]}" # $(alaska-config --cflags)
fi

